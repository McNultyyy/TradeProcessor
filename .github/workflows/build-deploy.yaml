on: push

jobs:

  setup-infra:
    name: Update
    runs-on: ubuntu-latest

    outputs:
      appName: ${{ steps.pulumi.outputs.appName}}
      appResourceGroup: ${{ steps.pulumi.outputs.appResourceGroup}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1
      
      - name: Az Login
        run: |
          az login --service-principal -u ${{ secrets.CLIENT_ID }} -p=${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}

      - name: Setup Pulumi
        uses: pulumi/actions@v4
      
      - name: Apply infrastructure
        id: pulumi
        run: |
          pulumi stack select McNultyyy/Infrastructure/dev --cwd Infrastructure
          pulumi up --cwd Infrastructure --yes

          echo "appName=$(pulumi stack output AppName -C Infrastructure)" >> "$GITHUB_OUTPUT"
          echo "appResourceGroup=$(pulumi stack output AppResourceGroup -C Infrastructure)" >> "$GITHUB_OUTPUT"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}

  build-and-deploy:
    needs: [setup-infra]
    runs-on: ubuntu-latest
    steps:

    # checkout the repo
    - name: 'Checkout Github Action' 
      uses: actions/checkout@v3

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 3.1

    - name: Az Login
      run: |
        az login --service-principal -u ${{ secrets.CLIENT_ID }} -p=${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}

    - name: Get WebApp/FunctionApp publish profile
      id: webapp
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        resourceGroupName: ${{ needs.setup-infra.outputs.appResourceGroup }}
        appName: ${{ needs.setup-infra.outputs.appName }}
    
    - name: Show Profile
      shell: bash
      run: |
        echo "WebApp: ${{ steps.webapp.outputs.profile }}"

    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ needs.setup-infra.outputs.appName }}
        publish-profile: ${{ secrets.azureWebAppPublishProfile }}