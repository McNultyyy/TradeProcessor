---
on: push
jobs:
  setup-infra:
    name: Setup Azure Infrastructure
    runs-on: ubuntu-latest
    outputs:
      appName: ${{ steps.pulumi.outputs.appName}}
      appResourceGroup: ${{ steps.pulumi.outputs.appResourceGroup}}
      endpoint: ${{ steps.pulumi.outputs.endpoint}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1     
      - name: Az Login
        run: |
          az login --service-principal \
          -u ${{ secrets.CLIENT_ID }} \
          -p=${{ secrets.CLIENT_SECRET }} \
          --tenant ${{ secrets.TENANT_ID }}
      - name: Setup Pulumi
        uses: pulumi/actions@v4
      - name: Apply infrastructure
        id: pulumi
        run: |
          pulumi stack select McNultyyy/Infrastructure/dev --cwd Infrastructure
          pulumi up --cwd Infrastructure --yes
          echo "appName=$(pulumi stack output AppName -C Infrastructure)" >> "$GITHUB_OUTPUT"
          echo "appResourceGroup=$(pulumi stack output AppResourceGroup -C Infrastructure)" >> "$GITHUB_OUTPUT"
          echo "endpoint=$(pulumi stack output Endpoint -C Infrastructure)" >> "$GITHUB_OUTPUT"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  build-and-deploy:
    name: Build and Deploy app
    needs: [setup-infra]
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout Github Action' 
      uses: actions/checkout@v3
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 3.1
    - name: Az Login
      run: |
        az login --service-principal \
        -u ${{ secrets.CLIENT_ID }} \
        -p=${{ secrets.CLIENT_SECRET }} \
        --tenant ${{ secrets.TENANT_ID }}
    - name: dotnet build and publish
      run: |
        cd TradeProcessor.Api
        dotnet restore
        dotnet build --configuration Release
        dotnet publish -c Release -o './app'
        ls -la
    - name: Get WebApp/FunctionApp publish profile
      id: get-publish-profile
      uses: aliencube/publish-profile-actions@v1.3.0
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        resourceGroupName: ${{ needs.setup-infra.outputs.appResourceGroup }}
        appName: ${{ needs.setup-infra.outputs.appName }}
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2.2.10
      with:
        app-name: ${{ needs.setup-infra.outputs.appName }}
        publish-profile: ${{ steps.get-publish-profile.outputs.profile }}
        package: "TradeProcessor.Api/app"
    - name: Check the deployed service URL
      uses: jtalk/url-health-check-action@v3
      with:
        url: ${{ needs.setup-infra.outputs.endpoint }}/healthcheck
        max-attempts: 1
        follow-redirect: true
    - name: Reset WebApp/FunctionApp publish profile
      id: reset
      if: always()
      uses: aliencube/publish-profile-actions@v1.3.0
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        resourceGroupName: ${{ needs.setup-infra.outputs.appResourceGroup }}
        appName: ${{ needs.setup-infra.outputs.appName }}
        reset: true